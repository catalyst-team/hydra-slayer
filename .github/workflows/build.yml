name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-20.04, ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        requirements: ['latest', 'minimal']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          pip install -U pip
          curl -sSL "https://install.python-poetry.org" | python - --version 1.5.1
          echo "${HOME}/.poetry/bin" >> $GITHUB_PATH
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install -U pip
          poetry install --with codestyle,test,docs
      - name: Install latest dependencies
        if: ${{ matrix.requirements == 'latest' }}
        run: |
          poetry update

      - name: Unit tests
        env:
          REQUIREMENTS: ${{ matrix.requirements }}
        run: |
          poetry run pytest --cov hydra_slayer -vvv -p no:cacheprovider .

      - name: Check dependencies compatibility
        run: |
          poetry run poetry check
          poetry run pip check
