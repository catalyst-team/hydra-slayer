name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-18.04, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        requirements: ['latest', 'minimal']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          pip install -U pip
          curl -sSL "https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py" | python -
          echo "${HOME}/.poetry/bin" >> $GITHUB_PATH
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install -U pip
          poetry install
      - name: Install latest dependencies
        if: ${{ matrix.requirements == 'latest' }}
        run: |
          poetry update

      - name: Unit tests
        env:
          REQUIREMENTS: ${{ matrix.requirements }}
        run: |
          poetry run pytest .

      - name: Check dependencies compatibility
        run: |
          poetry run poetry check
          poetry run pip check
