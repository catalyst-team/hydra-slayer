name: deploy-on-release

on:
 release:
     types: [published]

jobs:

  build-pypi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          pip install -U pip
          curl -sSL "https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py" | python -
          echo "${HOME}/.poetry/bin" >> $GITHUB_PATH
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install -U pip
          poetry install

      - name: Generating distribution archives
        run: |
          poetry build

      # - name: Publish a Python distribution to PyPI
      #   run: |
      #     poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      #     poetry publish

      # TODO: rm {
      - name: Publish a Python distribution to TestPyPI
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.PYPI_TEST_PASSWORD }}
          poetry publish -r testpypi
      # TODO: } rm
